# Will need to run an implicit function to get docker credentials from DockerHub...
# kubectl create secret docker-registry regcred --docker-server=<your-registry-server> --docker-username=<your-name> --docker-password=<your-pword> --docker-email=<your-email>
# These are then referenced in the containers using these private images:

# spec:
#   containers:
#   - name: db-api
#     image: okeefe123/haystack_llm_app-db_api
#   imagePullSecrets:
#   - name: regcred

apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
type: Opaque
data:
  openai_api_key: "c2stSlBUU3h2M2hPYnFNaE8yYUhwbm1UM0JsYmtGSmdscTNkbUN5UmJ0aVlFTUhGMUhGCg=="

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-api-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: db-api
  template:
    metadata:
      labels:
        app: db-api
    spec:
      containers:
      - name: db-api
        image: docker.io/okeefe123/haystack_llm_app-db_api:latest
        ports:
        - containerPort: 5001
      imagePullSecrets:
      - name: regcred

---

apiVersion: v1
kind: Service
metadata:
  name: db-api-service
spec:
  selector:
    app: db-api
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: app
        image: docker.io/okeefe123/haystack_llm_app-app:latest
        ports:
        - containerPort: 8501
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: openai_api_key
        - name: DB_BASE_URL
          value: http://db-api-service:5001
      imagePullSecrets:
        - name: regcred

---

# apiVersion: v1
# kind: Service
# metadata:
#   name: app-service
# spec:
#   selector:
#     app: app
#   ports:
#     - protocol: TCP
#       port: 8501
#       targetPort: 8501
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  type: NodePort
  selector:
    app: app
  ports:
    - protocol: TCP
      port: 8501
      targetPort: 8501
      nodePort: 30001